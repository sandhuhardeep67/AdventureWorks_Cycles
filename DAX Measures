DAX Measures
Here are some of the key DAX measures used in this project:


Percentage of All Orders
Purpose: Calculates the percentage of all orders.
DAX
% of All Orders = DIVIDE([Total Orders], [All Orders])


Percentage of All Returns
Purpose: Calculates the percentage of all returns.
DAX
% of All Returns = DIVIDE([Total Returns], [All Returns])


10-day Rolling Revenue
Purpose: Calculates the rolling revenue for the past 10 days.
DAX
10-day Rolling Revenue = CALCULATE(
    [Total Revenue],
    DATESINPERIOD('Calendar Lookup'[Date], MAX('Calendar Lookup'[Date]), -10, DAY))


90-day Rolling Profit
Purpose: Calculates the rolling profit for the past 90 days.
DAX
90-day Rolling Profit = CALCULATE(
    [Total Profit],
    DATESINPERIOD('Calendar Lookup'[Date], LASTDATE('Calendar Lookup'[Date]), -90, DAY))


All Orders
Purpose: Calculates the total number of orders, ignoring any filters.
DAX
All Orders = CALCULATE([Total Orders], ALL('Sales Data'))


All Returns
Purpose: Calculates the total number of returns, ignoring any filters.
DAX
All Returns = CALCULATE([Total Returns], ALL('Returns Data'))


Average Retail Price
Purpose: Calculates the average retail price of products.
DAX
Average Retail Price = AVERAGE('Product Lookup'[ProductPrice])


Average Revenue per Customer
Purpose: Calculates the average revenue per customer.
DAX
Average Revenue per Customer = DIVIDE([Total Revenue], [Total Customers])


Bike Sales
Purpose: Calculates the quantity of bikes sold.
DAX
Bike Sales = CALCULATE([Quantity Sold], 'Product Categories Lookup'[CategoryName] = "Bikes")


Bulk Orders
Purpose: Identifies bulk orders (more than one item).
DAX
Bulk Orders = CALCULATE([Total Orders], 'Sales Data'[OrderQuantity] > 1)


High Ticket Orders
Purpose: Identifies high ticket orders with a price above the overall average.
DAX
High Ticket Orders = CALCULATE(
    [Total Orders],
    FILTER('Product Lookup', 'Product Lookup'[ProductPrice] > [Overall Average Price]))


Previous Month Orders
Purpose: Calculates the total orders for the previous month.
DAX
Previous Month Orders = CALCULATE([Total Orders], DATEADD('Calendar Lookup'[Date], -1, MONTH))


Previous Month Profit
Purpose: Calculates the total profit for the previous month.
DAX
Previous Month Profit = CALCULATE([Total Profit], DATEADD('Calendar Lookup'[Date], -1, MONTH))


Previous Month Returns
Purpose: Calculates the total returns for the previous month.
DAX
Previous Month Returns = CALCULATE([Total Returns], DATEADD('Calendar Lookup'[Date], -1, MONTH))


Quantity Sold
Purpose: Calculates the total quantity of items sold.
DAX
Quantity Sold = SUM('Sales Data'[OrderQuantity])


Return Rate
Purpose: Calculates the return rate based on the quantity sold and returned.
DAX
Return Rate = DIVIDE([Quantity Returned], [Quantity Sold], "No Sales")


Total Cost
Purpose: Calculates the total cost of sales.
DAX
Total Cost = SUMX('Sales Data', 'Sales Data'[OrderQuantity] * RELATED('Product Lookup'[ProductCost]))


Total Customers
Purpose: Counts the total number of unique customers.
DAX
Total Customers = DISTINCTCOUNT('Sales Data'[CustomerKey])


Total Orders
Purpose: Counts the total number of unique orders.
DAX
Total Orders = DISTINCTCOUNT('Sales Data'[OrderNumber])


Total Profit
Purpose: Calculates the total profit.
DAX
Total Profit = [Total Revenue] - [Total Cost]


Weekend Orders
Purpose: Identifies orders placed on weekends.
DAX
Weekend Orders = CALCULATE([Total Orders], 'Calendar Lookup'[Weekend] = "Weekend")


Price Adjustment (%) Value
Purpose: Applies selected price adjustment percentage.
DAX
Price Adjustment (%) Value = SELECTEDVALUE('Price Adjustment (%)'[Price Adjustment (%)], 0)
